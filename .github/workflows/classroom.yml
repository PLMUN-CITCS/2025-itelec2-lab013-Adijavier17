name: Autograding Tests
on: ["push", "repository_dispatch"]
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: File Existence Check - for_loop_break_continue.py
      id: file-existence-check
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: File Existence Check - for_loop_break_continue.py
        command: "test -f for_loop_break_continue.py"
        timeout: 10
        max-score: 10
    - name: Syntax Check - for_loop_break_continue.py
      id: syntax-check
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Syntax Check - for_loop_break_continue.py
        command: "pylint for_loop_break_continue.py --disable=C"
        timeout: 10
        max-score: 30
    - name: Run Check - for_loop_break_continue.py
      id: logic-check
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Run Check - for_loop_break_continue.py
        setup-command: "chmod +x ./run_tests.sh"
        command: "./run_tests.sh"
        timeout: 10
        max-score: 60
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        FILE-EXISTENCE-CHECK_RESULTS: "${{steps.file-existence-check.outputs.result}}"
        SYNTAX-CHECK_RESULTS: "${{steps.syntax-check.outputs.result}}"
        LOGIC-CHECK_RESULTS: "${{steps.logic-check.outputs.result}}"
      with:
        runners: file-existence-check,syntax-check,logic-check